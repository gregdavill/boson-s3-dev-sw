# This is a basic workflow to help you get started with Actions

name: Buildroot

on:
  create: { }
  push: { }
  pull_request: { }

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      pkgfile: ${{ steps.pkgname.outputs.pkgfile }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: retrieve ccache
        uses: actions/cache@v2
        with:
          path: ~/.buildroot-ccache
          key: ccache-${{ github.sha }}
          restore-keys: |
            ccache-

      - name: Prepare and run build
        run: |
          cd "$(realpath "$GITHUB_WORKSPACE")"
          sudo apt-get update
          sudo apt-get -y install build-essential bc gcc g++ patch binutils unzip rsync wget bzip2 gzip perl gcc-multilib g++-multilib
          cd ..
          wget https://buildroot.org/downloads/buildroot-2022.05.tar.gz
          tar -xaf buildroot-2022.05.tar.gz
          cd buildroot-2022.05
          make BR2_EXTERNAL=../boson-s3-dev-sw/buildroot/ boson_s3_dev_defconfig
          make -j$(nproc --all)
          gzip output/images/sdcard.img

      # Upload artifacts
      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: sdcard.img.gz
          path: $(realpath "$GITHUB_WORKSPACE"/../buildroot-2022.05/output/images/sdcard.img.gz)

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: sdcard.img.gz
          path: .

      # Upload actual release
      # build job is likely to take more than an hour, secrets.GITHUB_TOKEN would have expired
      - name: Release build artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            sdcard.img.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
